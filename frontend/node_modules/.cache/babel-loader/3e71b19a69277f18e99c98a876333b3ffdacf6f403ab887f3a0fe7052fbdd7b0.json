{"ast":null,"code":"var _jsxFileName = \"E:\\\\Events App\\\\frontend\\\\src\\\\pages\\\\Tasks.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Group, Indicator, Avatar } from '@mantine/core';\nimport { Calendar } from '@mantine/dates';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tasks() {\n  _s();\n  const [selected, setSelected] = useState([]);\n  const handleSelect = date => {\n    console.log(\"SeLECTEd DATe\", date);\n    const isSelected = selected.some(s => dayjs(date).isSame(s, 'date'));\n    if (isSelected) {\n      setSelected(current => current.filter(d => !dayjs(d).isSame(date, 'date')));\n    } else if (selected.length < 3) {\n      setSelected(current => [...current, date]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Group, {\n    position: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Calendar, {\n      renderDay: date => {\n        const day = date.getDate();\n        return (\n          // <Indicator size={6} color=\"red\" offset={-2} disabled={day !== 16}>\n          day == 18 ? /*#__PURE__*/_jsxDEV(Avatar, {\n            radius: \"lg\",\n            color: \"yellow\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: day\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 11\n          }, this)\n          // </Indicator>\n        );\n      },\n\n      getDayProps: date => ({\n        selected: selected.some(s => dayjs(date).isSame(s, 'date')),\n        onClick: () => handleSelect(date)\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(Tasks, \"lGSfRvmoWXlCcuuisg7PtZk/Isc=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","Group","Indicator","Avatar","Calendar","jsxDEV","_jsxDEV","Tasks","_s","selected","setSelected","useState","handleSelect","date","console","log","isSelected","some","s","dayjs","isSame","current","filter","d","length","position","children","renderDay","day","getDate","radius","color","fileName","_jsxFileName","lineNumber","columnNumber","getDayProps","onClick","_c","$RefreshReg$"],"sources":["E:/Events App/frontend/src/pages/Tasks.js"],"sourcesContent":["import React from \"react\";\r\nimport { Group, Indicator, Avatar\r\n } from '@mantine/core';\r\nimport { Calendar } from '@mantine/dates';\r\n\r\nfunction Tasks() {\r\n    const [selected, setSelected] = useState([]);\r\n  const handleSelect = (date) => {\r\n    console.log(\"SeLECTEd DATe\", date)\r\n    const isSelected = selected.some((s) => dayjs(date).isSame(s, 'date'));\r\n    if (isSelected) {\r\n      setSelected((current) => current.filter((d) => !dayjs(d).isSame(date, 'date')));\r\n    } else if (selected.length < 3) {\r\n      setSelected((current) => [...current, date]);\r\n    }\r\n  };\r\n  return (\r\n    <Group position=\"center\">\r\n      <Calendar\r\n        renderDay={(date) => {\r\n          const day = date.getDate();\r\n          return (\r\n            // <Indicator size={6} color=\"red\" offset={-2} disabled={day !== 16}>\r\n        (day==18)?(\r\n\r\n            <Avatar radius=\"lg\" color=\"yellow\" >\r\n\r\n                <div>{day}</div>\r\n            </Avatar>\r\n        ):<div>{day}</div>\r\n            // </Indicator>\r\n          );\r\n        }}\r\n        getDayProps={(date) => ({\r\n            selected: selected.some((s) => dayjs(date).isSame(s, 'date')),\r\n            onClick: () => handleSelect(date),\r\n          })}\r\n      />\r\n    </Group>\r\n  );\r\n}\r\n\r\n\r\nexport default Tasks;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,SAAS,EAAEC,MAAM,QACzB,eAAe;AACvB,SAASC,QAAQ,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMC,YAAY,GAAIC,IAAI,IAAK;IAC7BC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,IAAI,CAAC;IAClC,MAAMG,UAAU,GAAGP,QAAQ,CAACQ,IAAI,CAAEC,CAAC,IAAKC,KAAK,CAACN,IAAI,CAAC,CAACO,MAAM,CAACF,CAAC,EAAE,MAAM,CAAC,CAAC;IACtE,IAAIF,UAAU,EAAE;MACdN,WAAW,CAAEW,OAAO,IAAKA,OAAO,CAACC,MAAM,CAAEC,CAAC,IAAK,CAACJ,KAAK,CAACI,CAAC,CAAC,CAACH,MAAM,CAACP,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;IACjF,CAAC,MAAM,IAAIJ,QAAQ,CAACe,MAAM,GAAG,CAAC,EAAE;MAC9Bd,WAAW,CAAEW,OAAO,IAAK,CAAC,GAAGA,OAAO,EAAER,IAAI,CAAC,CAAC;IAC9C;EACF,CAAC;EACD,oBACEP,OAAA,CAACL,KAAK;IAACwB,QAAQ,EAAC,QAAQ;IAAAC,QAAA,eACtBpB,OAAA,CAACF,QAAQ;MACPuB,SAAS,EAAGd,IAAI,IAAK;QACnB,MAAMe,GAAG,GAAGf,IAAI,CAACgB,OAAO,CAAC,CAAC;QAC1B;UACE;UACHD,GAAG,IAAE,EAAE,gBAEJtB,OAAA,CAACH,MAAM;YAAC2B,MAAM,EAAC,IAAI;YAACC,KAAK,EAAC,QAAQ;YAAAL,QAAA,eAE9BpB,OAAA;cAAAoB,QAAA,EAAME;YAAG;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ,CAAC,gBACX7B,OAAA;YAAAoB,QAAA,EAAME;UAAG;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;UACb;QAAA;MAEJ,CAAE;;MACFC,WAAW,EAAGvB,IAAI,KAAM;QACpBJ,QAAQ,EAAEA,QAAQ,CAACQ,IAAI,CAAEC,CAAC,IAAKC,KAAK,CAACN,IAAI,CAAC,CAACO,MAAM,CAACF,CAAC,EAAE,MAAM,CAAC,CAAC;QAC7DmB,OAAO,EAAEA,CAAA,KAAMzB,YAAY,CAACC,IAAI;MAClC,CAAC;IAAE;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEZ;AAAC3B,EAAA,CAnCQD,KAAK;AAAA+B,EAAA,GAAL/B,KAAK;AAsCd,eAAeA,KAAK;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}